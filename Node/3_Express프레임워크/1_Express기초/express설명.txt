express framework
- 이전까지 진행했던 기본적인 Node코드는 서버하나가 모든 업무 담당(생성,요청,응답)
- 사용자가 증가 -> 작업량 증가 -> 파일증가
- 분업화를 위해 프레임워크 활용
    - 1) config : 설정에 관련된 정보들을 저장(DB연결,API key 값 등 ..)
    - 2) public : 정적인 파일들을 관리하는 공간(css, js, img, video ..)
    - 3) routes : 경로를 담당하는 공간 (이정표)
    - 4) views  : 동적인 웹페에지를 담당하는 공간 
    - 5) app.js : express의 핵심 컨트롤 타워(모든 기능을 관리(Main파일))

    [Express 설피 프로세스]
    1. 사용할 폴더 생성(프레임워크는 프로젝트 단위로 사용)
    2. npm init -y (package 파일을 생성)
    3. express 설치 ->  npm install express
    4. 기본폴더 구성 -> config,public ..
    5. app.js -> 메인 파일 생성 